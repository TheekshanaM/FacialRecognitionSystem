@model FacialRecognitionSystem.Models.CelebrityViewModel
@{
    ViewBag.Title = "Changesetting";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Change setting</h2>
<hr />
<div class="jumbotron">
    <div class="container">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

        <div class="form-horizontal">
            
            

            <div class="form-group">
                <div class="col-md-4 col-md-offset-2">
                    <div id="imgPreview" class="thumbnail">
                        <img class="img-responsive" src="@Model.ProfilePic" />
                    </div>
                </div>
            </div>
            <div class="form-group" style="margin-top:-15px;">
                <div class="col-md-5">
                    @Html.ActionLink("Photos", "ViewImage", "Celebrity", new { id = Model.CelebrityId }, new { @class = "btn btn-info col col-md-offset-5" })
                </div>
            </div>

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.ActiveStatus, htmlAttributes: new { @class = "control-label col-md-2" })
                <label class="switch">
                    @Html.CheckBoxFor(m => m.ActiveStatus, new {@class="switch-input" })
                    <span class="switch-label" data-on="Active" data-off="Deactive"></span>
                    <span class="switch-handle"></span>
                </label>
            </div>
            @*<div class="form-group" id="celeb">
                @Html.LabelFor(model => model.ActiveStatus, htmlAttributes: new { @class = "control-label col-md-2" })
                @if (Model.ActiveStatus)
                {
                    <label class="switch">
                        <input type="checkbox" class="switch-input" name="ActiveStatus" checked />
                        <span class="switch-label" data-on="Active" data-off="Deactive"></span>
                        <span class="switch-handle"></span>
                    </label>
                }
                else
                {
                        <label class="switch">
                            <input type="checkbox" class="switch-input" name="ActiveStatus" />
                            <span class="switch-label" data-on="Active" data-off="Deactive"></span>
                            <span class="switch-handle"></span>
                        </label>
                }

            </div>*@

            <div class="form-group">
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })

                <div class="col-md-5">
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", @Value = Model.FirstName } })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })

                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })

                <div class="col-md-5">
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", @Value = Model.LastName } })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })

                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })

                <div class="col-md-5">
                    @Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control", @Value = Model.Gender } })
                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })

                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Feild, htmlAttributes: new { @class = "control-label col-md-2" })

                <div class="col-md-5">
                    @Html.EditorFor(model => model.Feild, new { htmlAttributes = new { @class = "form-control", @Value = Model.Feild } })
                    @Html.ValidationMessageFor(model => model.Feild, "", new { @class = "text-danger" })

                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })

                <div class="col-md-5">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", @Value = Model.Description } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })

                </div>
            </div>
            <div class="form-group">
                @Html.HiddenFor(a => a.CelebrityId)
            </div>

            <div class="col-md-5 col-md-offset-2">
                <input type="submit" class="btn btn-info" value="Save Changes" />
                <a href="@Url.Action("Index","Home")" class="btn btn-danger">Cancel</a>
            </div>


        </div>
        }

    </div>
</div>
