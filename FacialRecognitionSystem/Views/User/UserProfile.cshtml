@model DataAccess.UserDataExtended2

@{
    ViewBag.Title = "UserProfile";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>UserProfile</h2>
<hr />
@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <div class="form-group">
        <div class="col-md-4 col-md-offset-2">
            <div id="imgPreview" class="thumbnail">
                <img class="img-responsive" src="@Model.Link" />
            </div>
        </div>
    </div>

    <div class="form-group" style="margin-top:-15px;">
        <div class="col-md-5">
            @if (Model.BlockStatus)
            {
                @Html.ActionLink("Unblock", "UnBlock", "User", new { id = Model.UserId }, new { @class = "btn btn-info col col-md-offset-5" })
            }
            else
            {
                @Html.ActionLink("Block", "Block", "User", new { id = Model.UserId }, new { @class = "btn btn-info col col-md-offset-5" })
            }
        </div>
    </div>

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-5">
            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", @value = Model.FirstName, disabled = "disabled" } })
            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-5">
            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", @value = Model.LastName, disabled = "disabled" } })
            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-5">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @value = Model.Email, disabled = "disabled" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-5">
            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", @Value = Model.Address, disabled = "disabled" } })
            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-5">
            @Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control", @Value = Model.Gender, disabled = "disabled" } })
            @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MobileNumber, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-5">
            @Html.EditorFor(model => model.MobileNumber, new { htmlAttributes = new { @class = "form-control", @Value = Model.MobileNumber, disabled = "disabled" } })
            @Html.ValidationMessageFor(model => model.MobileNumber, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-5">
            @Html.TextAreaFor(model => model.Description, 5, 58, new { htmlAttributes = new { @class = "form-control", @Value = Model.Description, disabled = "disabled" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

</div>
}

